apiVersion: v1
kind: ServiceAccount
metadata:
  name: aks-predictor
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: aks-predictor-role
rules:
- apiGroups: [""]
  resources: ["nodes", "pods", "namespaces", "services", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["nodes", "pods"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: aks-predictor-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: aks-predictor-role
subjects:
- kind: ServiceAccount
  name: aks-predictor
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aks-predictor-dashboard
  labels:
    app: aks-predictor
    version: "IMAGE_TAG"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aks-predictor
  template:
    metadata:
      labels:
        app: aks-predictor
        version: "IMAGE_TAG"
    spec:
      serviceAccountName: aks-predictor
      containers:
      - name: dashboard
        image: ACR_NAME.azurecr.io/aks-predictor:IMAGE_TAG
        ports:
        - containerPort: 5000
        env:
        - name: FLASK_ENV
          value: "production"
        - name: PYTHONUNBUFFERED
          value: "1"
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 10
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: aks-predictor-service
  labels:
    app: aks-predictor
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 5000
    protocol: TCP
    name: http
  selector:
    app: aks-predictor
