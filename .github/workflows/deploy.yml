name: Deploy AKS Predictor

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Manual trigger

env:
  RESOURCE_GROUP: rg-aks-predictor
  AKS_CLUSTER: aks-predictor-cluster
  ACR_NAME: acrpredictorlab13224
  APP_NAME: aks-predictor
  LOCATION: eastus

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: Prod
    
    steps:
    - name: 🛒 Checkout code
      uses: actions/checkout@v4

    - name: 🔐 Azure Login
      uses: azure/login@v1
      with:
        creds: |
          {
            "clientId": "${{ secrets.CLIENT_ID }}",
            "clientSecret": "${{ secrets.CLIENT_SECRET }}",
            "subscriptionId": "${{ secrets.SUBSCRIPTION_ID }}",
            "tenantId": "${{ secrets.TENANT_ID }}"
          }

    - name: 🏗️ Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 📦 Login to ACR
      run: |
        az acr login --name ${{ env.ACR_NAME }}

    - name: 🏷️ Generate image tag
      id: image-tag
      run: |
        echo "tag=v${{ github.run_number }}" >> $GITHUB_OUTPUT

    - name: 🐳 Build and push Docker image
      run: |
        docker build -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.APP_NAME }}:${{ steps.image-tag.outputs.tag }} .
        docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.APP_NAME }}:${{ steps.image-tag.outputs.tag }}

    - name: ☸️ Setup kubectl
      uses: azure/setup-kubectl@v3

    - name: 🔗 Get AKS credentials
      run: |
        az aks get-credentials --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.AKS_CLUSTER }} --overwrite-existing

    - name: 🚀 Deploy to AKS
      run: |
        # Replace placeholders in deployment
        sed -i "s|IMAGE_TAG|${{ steps.image-tag.outputs.tag }}|g" k8s-deployment.yaml
        sed -i "s|ACR_NAME|${{ env.ACR_NAME }}|g" k8s-deployment.yaml
        
        # Apply Kubernetes manifests
        kubectl apply -f k8s-deployment.yaml
        
        # Wait for rollout
        kubectl rollout status deployment/aks-predictor-dashboard --timeout=300s

    - name: 📊 Get deployment info
      run: |
        echo "🎉 Deployment completed!"
        kubectl get pods -l app=aks-predictor
        kubectl get service aks-predictor-service
        
        EXTERNAL_IP=$(kubectl get service aks-predictor-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
        echo "🌍 Dashboard URL: http://$EXTERNAL_IP"